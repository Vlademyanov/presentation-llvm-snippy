const terminal = document.getElementById("terminal");
const username = "user";
const hostname = "presentation-pc";
let mode = null; // 'auto' –∏–ª–∏ 'manual'
let currentSlide = 0;
const slides = ["slide1.png", "slide2.png", "slide3.png", "slide4.png", "slide5.png", "slide6.png", "slide7.png"];

/** –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ –¥–æ —Å–∞–º–æ–≥–æ –Ω–∏–∑–∞ */
function scrollToBottom() {
    terminal.scrollTop = terminal.scrollHeight;
}

/** –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ.
 *  –ö–∞–∂–¥—ã–π –≤—ã–∑–æ–≤ –¥–æ–±–∞–≤–ª—è–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –∫–æ–Ω–µ—Ü –∏ –≤—ã–∑—ã–≤–∞–µ—Ç scrollToBottom().
 */
function print(text, newLine = true) {
    terminal.innerHTML += text + (newLine ? "\n" : "");
    scrollToBottom();
}

/** –§–æ—Ä–º–∏—Ä—É–µ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ (prompt) –∫–∞–∫ –≤ Linux */
function getPrompt() {
    return `<span style="color:#6A9FB5">${username}@${hostname}</span>:<span style="color:#B5BD68">~</span>$ `;
}

/** –ó–∞–ø—Ä–æ—Å –Ω–∞—á–∞–ª—å–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã (–≤—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞) */
function askMode() {
    print(getPrompt(), false);
    const input = document.createElement("input");
    input.spellcheck = false;
    terminal.appendChild(input);
    input.focus();

    input.addEventListener("keydown", function(e) {
        if (e.key === "Enter") {
            const command = input.value.trim();
            input.remove();
            print(command); // –≤—ã–≤–æ–¥–∏–º –≤–≤–µ–¥—ë–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Ç–æ–π –∂–µ —Å—Ç—Ä–æ–∫–µ
            if (command === "pres --auto") {
                mode = "auto";
                startBuildProcess();
            } else if (command === "pres --manual") {
                mode = "manual";
                startBuildProcess();
            } else {
                print("bash: command not found: " + command);
                askMode();
            }
        }
    });
}

/** –ò–º–∏—Ç–∞—Ü–∏—è —Å–±–æ—Ä–∫–∏ (–≤—ã–≤–æ–¥ –∫–æ–º–∞–Ω–¥ cmake) */
function startBuildProcess() {
    print(getPrompt() + "cmake -S llvm -B release/build -G Ninja -C release.cmake");
    setTimeout(() => {
        print(getPrompt() + "cmake --build release/build");
        setTimeout(() => {
            print(getPrompt() + "cmake --install release/build");
            setTimeout(() => {
                print("Build completed successfully!\n");
                if (mode === "auto") {
                    loadSlide();
                    // –í –∞–≤—Ç–æ-—Ä–µ–∂–∏–º–µ –∂–¥—ë–º –ø—Ä–∞–≤–æ–≥–æ –∫–ª–∏–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–ª–∞–π–¥—É
                    document.addEventListener("contextmenu", autoNextSlide);
                } else {
                    enableManualMode();
                }
            }, 1000);
        }, 1000);
    }, 1000);
}

/** –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ª–∞–π–¥–∞.
 *  –°–Ω–∞—á–∞–ª–∞ –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Å –∫–æ–º–∞–Ω–¥–æ–π, –∑–∞—Ç–µ–º ‚Äì —Å–ª–∞–π–¥ (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ).
 */
function loadSlide() {
    if (currentSlide >= slides.length) {
        print("Presentation finished!");
        return;
    }
    // –í—ã–≤–æ–¥–∏–º –∫–æ–º–∞–Ω–¥—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ª–∞–π–¥–∞
    print(getPrompt() + `cat slides/${slides[currentSlide]}`);

    // –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–ª–∞–π–¥–∞ (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
    const slideContainer = document.createElement("div");
    slideContainer.classList.add("slide-container");
    const img = document.createElement("img");
    img.src = `slides/${slides[currentSlide]}`;
    img.alt = `Slide ${currentSlide + 1}`;
    slideContainer.appendChild(img);

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª–∞–π–¥ –≤ –∫–æ–Ω–µ—Ü —Ç–µ—Ä–º–∏–Ω–∞–ª–∞
    terminal.appendChild(slideContainer);
    scrollToBottom();

    if (mode === "auto") {
        document.addEventListener("contextmenu", autoNextSlide);
        document.addEventListener("touchend", autoNextSlide);
    }
}

/** –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∞–≤–æ–≥–æ –∫–ª–∏–∫–∞ –¥–ª—è –∞–≤—Ç–æ-—Ä–µ–∂–∏–º–∞:
 *  –ü—Ä–∏ –ü–ö–ú –≤—ã–≤–æ–¥–∏—Ç—Å—è –Ω–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ (–ø–æ—è–≤–ª—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞), –∫–æ—Ç–æ—Ä–∞—è ¬´–≤—ã—Ç–∞–ª–∫–∏–≤–∞–µ—Ç¬ª —Å–ª–∞–π–¥ –≤–≤–µ—Ä—Ö.
 *  –ü–æ—Å–ª–µ —á–µ–≥–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–π —Å–ª–∞–π–¥.
 */
function autoNextSlide(e) {
    e.preventDefault();
    document.removeEventListener("contextmenu", autoNextSlide);
    document.removeEventListener("touchend", autoNextSlide);

    print(getPrompt());
    setTimeout(() => {
        currentSlide++;
        loadSlide();
    }, 300);
}
/** –†—É—á–Ω–æ–π —Ä–µ–∂–∏–º: –≤—ã–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏ –≤–≤–æ–¥–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥.
 *  –ö–∞–∂–¥–∞—è –Ω–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –∫–æ–Ω–µ—Ü —Ç–µ—Ä–º–∏–Ω–∞–ª–∞, —Å–¥–≤–∏–≥–∞—è —Å—Ç–∞—Ä—ã–π –≤—ã–≤–æ–¥ –≤–≤–µ—Ä—Ö.
 */
function enableManualMode() {
    print(getPrompt(), false);
    const input = document.createElement("input");
    input.spellcheck = false;
    terminal.appendChild(input);
    input.focus();

    input.addEventListener("keydown", function(e) {
        if (e.key === "Enter") {
            const command = input.value.trim();
            input.remove();
            print(command);
            if (command === "pres --help") {
                print("üîπ Available commands:");
                print("  - pres --goto slideX (go to slide X)");
                print("  - pres --exit (exit presentation)");
            } else if (command.startsWith("pres --goto")) {
                let slideNum = parseInt(command.split(" ")[1].replace("slide", ""));
                if (!isNaN(slideNum) && slideNum > 0 && slideNum <= slides.length) {
                    currentSlide = slideNum - 1;
                    loadSlide();
                } else {
                    print("Error: Invalid slide number.");
                }
            } else if (command === "pres --exit") {
                print("Exiting...");
                return;
            } else {
                print("bash: command not found: " + command);
            }
            // –ü–æ—Å–ª–µ –Ω–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã —Å–Ω–æ–≤–∞ –≤—ã–≤–æ–¥–∏–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ,
            // –ø—Ä–∏ —ç—Ç–æ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å—Ç—Ä–æ–∫–∏ (–≤ —Ç–æ–º —á–∏—Å–ª–µ —Å–ª–∞–π–¥) –æ—Å—Ç–∞—é—Ç—Å—è –≤—ã—à–µ –∏ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞—é—Ç—Å—è.
            enableManualMode();
        }
    });
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—É
askMode();